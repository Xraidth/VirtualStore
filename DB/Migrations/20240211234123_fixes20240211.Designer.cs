// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(virtual_storeContext))]
    [Migration("20240211234123_fixes20240211")]
    partial class fixes20240211
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("DB.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_name");

                    b.Property<decimal>("ProductPrice")
                        .HasPrecision(9, 3)
                        .HasColumnType("decimal(9,3)")
                        .HasColumnName("product_price");

                    b.HasKey("ProductId");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("DB.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sale_id");

                    b.Property<DateTime>("SaleDay")
                        .HasColumnType("date")
                        .HasColumnName("sale_day");

                    b.Property<decimal>("Total")
                        .HasPrecision(9, 3)
                        .HasColumnType("decimal(9,3)")
                        .HasColumnName("total");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("SaleId");

                    b.HasIndex(new[] { "UserId" }, "fk_user_id_users");

                    b.ToTable("sales", (string)null);
                });

            modelBuilder.Entity("DB.Models.SalesLine", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("line_id");

                    b.Property<int>("SaleId")
                        .HasColumnType("int")
                        .HasColumnName("sale_id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(9, 3)
                        .HasColumnType("decimal(9,3)")
                        .HasColumnName("subTotal");

                    b.HasKey("LineId", "SaleId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "ProductId" }, "fk_product_id_products");

                    b.HasIndex(new[] { "SaleId" }, "fk_sale_id_sales");

                    b.ToTable("sales_lines", (string)null);
                });

            modelBuilder.Entity("DB.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_password");

                    b.HasKey("UserId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("DB.Models.Sale", b =>
                {
                    b.HasOne("DB.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_id_users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DB.Models.SalesLine", b =>
                {
                    b.HasOne("DB.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_product_id_products");

                    b.HasOne("DB.Models.Sale", "Sale")
                        .WithMany("SalesLines")
                        .HasForeignKey("SaleId")
                        .IsRequired()
                        .HasConstraintName("fk_sale_id_sales");

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("DB.Models.Sale", b =>
                {
                    b.Navigation("SalesLines");
                });
#pragma warning restore 612, 618
        }
    }
}
